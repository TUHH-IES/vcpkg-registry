diff --git a/CMakeLists.txt b/CMakeLists.txt
index fb4eae9..28e2e91 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,10 @@
-project(ChimeraTK-cppext)
+set(CMAKE_TOOLCHAIN_FILE "${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
+        CACHE STRING "Vcpkg toolchain file")
+
 cmake_minimum_required(VERSION 3.16)
+project(cppext)
+
+message(${CMAKE_TOOLCHAIN_FILE})
 
 list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/Modules)
 
@@ -12,7 +17,7 @@ include(cmake/set_version_numbers.cmake)
 add_library(${PROJECT_NAME} INTERFACE)
 
 # find BOOST libraries (needed for tests only)
-find_package(Boost COMPONENTS unit_test_framework system thread REQUIRED)
+find_package(Boost COMPONENTS system thread REQUIRED)
 find_package(Threads REQUIRED)
 find_package(GccAtomic)
 
@@ -46,17 +51,17 @@ if(BUILD_TESTS)
     #NAME_WE means the base name without path and (longest) extension
     get_filename_component(excutableName ${testExecutableSrcFile} NAME_WE)
     add_executable(${excutableName} ${testExecutableSrcFile})
-    target_link_libraries(${excutableName} PRIVATE ${PROJECT_NAME} ${Boost_THREAD_LIBRARY} ${Boost_SYSTEM_LIBRARY} Threads::Threads)
+    target_link_libraries(${excutableName} PRIVATE ${PROJECT_NAME} Boost::system Boost::thread Threads::Threads)
     add_test(${excutableName} ${excutableName})
   endforeach( testExecutableSrcFile )
 
 endif()
 
 # generate Doxygen documentation
-include(cmake/enable_doxygen_documentation.cmake)
+#include(cmake/enable_doxygen_documentation.cmake)
 
 # enable code coverate report
-include(cmake/enable_code_coverage_report.cmake)
+#include(cmake/enable_code_coverage_report.cmake)
 
 # install header files
 install(DIRECTORY ${CMAKE_SOURCE_DIR}/include/ DESTINATION include/ChimeraTK/cppext
@@ -64,14 +69,42 @@ install(DIRECTORY ${CMAKE_SOURCE_DIR}/include/ DESTINATION include/ChimeraTK/cpp
 
 # this only provides cmake export
 include(GNUInstallDirs)
-install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}Targets
-    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
+#install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}Targets
+#    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
 # Create cmake configuration files for downstream projects
 # we support our cmake EXPORTS as imported targets
-set(PROVIDES_EXPORTED_TARGETS 1)
+#set(PROVIDES_EXPORTED_TARGETS 1)
 # we need the public dependencies so create_cmake_config_files can find them as implicit dependencies
 # Note, GccAtomic is not listed here since it doesn't provide imported target and resolved lib location 
 # is already in our public linker flags.
-list(APPEND ${PROJECT_NAME}_PUBLIC_DEPENDENCIES "Boost COMPONENTS system thread;Threads")
-include(${CMAKE_SOURCE_DIR}/cmake/create_cmake_config_files.cmake)
+#list(APPEND ${PROJECT_NAME}_PUBLIC_DEPENDENCIES "Boost COMPONENTS system thread;Threads")
+#include(${CMAKE_SOURCE_DIR}/cmake/create_cmake_config_files.cmake)
+
+include(CMakePackageConfigHelpers)
+configure_package_config_file(cmake/config.cmake.in
+        ${CMAKE_CURRENT_BINARY_DIR}/chimeratk-cppext-config.cmake
+        INSTALL_DESTINATION ${CMAKE_INSTALL_DATADIR}/chimeratk-cppext
+        NO_SET_AND_CHECK_MACRO)
+write_basic_package_version_file(
+        ${CMAKE_CURRENT_BINARY_DIR}/chimeratk-cppext-config-version.cmake
+        VERSION ${${PROJECT_NAME}_VERSION}
+        COMPATIBILITY SameMajorVersion)
+install(FILES
+        ${CMAKE_CURRENT_BINARY_DIR}/chimeratk-cppext-config.cmake
+        ${CMAKE_CURRENT_BINARY_DIR}/chimeratk-cppext-config-version.cmake
+        DESTINATION ${CMAKE_INSTALL_DATADIR}/chimeratk-cppext)
+install(TARGETS cppext EXPORT chimeratk-cppext-targets)
+#install(DIRECTORY include/
+#        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
+#        FILES_MATCHING PATTERN "*.hpp")
+#install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/include/
+#        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
+#        FILES_MATCHING
+#        PATTERN "*.hpp"
+#        PATTERN "*.hh"
+#        PATTERN "CMakeFiles" EXCLUDE)
+message(${CMAKE_INSTALL_DATADIR}/chimeratk-cppext)
+install(EXPORT chimeratk-cppext-targets
+        NAMESPACE ChimeraTK::
+        DESTINATION ${CMAKE_INSTALL_DATADIR}/chimeratk-cppext)
\ No newline at end of file
diff --git a/cmake/config.cmake.in b/cmake/config.cmake.in
new file mode 100644
index 0000000..eb36e6f
--- /dev/null
+++ b/cmake/config.cmake.in
@@ -0,0 +1,4 @@
+@PACKAGE_INIT@
+
+include(${CMAKE_CURRENT_LIST_DIR}/chimeratk-cppext-targets.cmake)
+check_required_components(chimeratk-cppext)
\ No newline at end of file
